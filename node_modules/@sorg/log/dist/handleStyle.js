"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("./utils");
function wrap(message, wrapper, style, removeResetColorCode) {
    if (removeResetColorCode === void 0) { removeResetColorCode = false; }
    return handleStyle("" + (wrapper && wrapper[0] ? wrapper[0] : '') + message + (wrapper && wrapper[1] ? wrapper[1] : ''), style, removeResetColorCode);
}
exports.wrap = wrap;
function handleStyle(msg, style, removeResetColorCode) {
    if (style) {
        if (removeResetColorCode) {
            return "" + style + msg;
        }
        return getColorCode('reset', "" + style + msg);
    }
    return msg;
}
function getNodeStyle(style) {
    if (typeof style === 'string') {
        return { color: getColorCode('color', utils_1.stringColorToAnsi256(style)), background: '' };
    }
    else {
        return {
            color: getColorCode('color', utils_1.stringColorToAnsi256(style.color)),
            background: getColorCode('background', utils_1.stringColorToAnsi256(style.background))
        };
    }
}
exports.getNodeStyle = getNodeStyle;
function getColorCode(type, color) {
    switch (type) {
        case 'color':
            return color !== undefined ? "\u001B[38;5;" + color + "m" : '';
        case 'background':
            return color !== undefined ? "\u001B[48;5;" + color + "m" : '';
        case 'reset':
            return color !== undefined ? color + "\u001B[0m" : '';
    }
}
function createBrowserStyle(style) {
    if (typeof style === 'string') {
        return "color: " + style + ";";
    }
    else {
        var res = '';
        for (var key in style) {
            if (style.hasOwnProperty(key)) {
                res += key + ": " + style[key] + ";";
            }
        }
        return res;
    }
}
exports.createBrowserStyle = createBrowserStyle;
